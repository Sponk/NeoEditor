## Find source and headers
FILE(GLOB HEADERS Includes/*.h)
FILE(GLOB SOURCES Sources/*.c*)

IF(CMAKE_HAS_SORT)
  LIST(SORT HEADERS)
  LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

## Build
INCLUDE_DIRECTORIES(
  ${NEO_CORE_INCLUDE_DIR}
  ${NEO_ENGINE_INCLUDE_DIR}
  ${SDL_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${TINYUTF8_INCLUDE_DIR}
)

# SET(CMAKE_INSTALL_RPATH "./") # "${CMAKE_INSTALL_PREFIX}")

ADD_DEFINITIONS(-DNEO_ENGINE_DLL)
SET(CMAKE_SHARED_LIBRARY_PREFIX "")

IF(NOT ANDROID AND NOT EMSCRIPTEN)
        ADD_LIBRARY(NeoEngine SHARED ${SOURCES} ${HEADERS})
ELSE()
        ADD_LIBRARY(NeoEngine STATIC ${SOURCES} ${HEADERS})
ENDIF()

TARGET_LINK_LIBRARIES(NeoEngine ${NEO_CORE_LIBRARIES})

## Install for Editor
INSTALL(TARGETS NeoEngine DESTINATION ${NEO_INSTALL_DIR})

## Install for SDK
INSTALL(TARGETS NeoEngine DESTINATION ${NEO_INSTALL_DIR}/SDK/lib)
INSTALL(FILES ${HEADERS} DESTINATION ${NEO_INSTALL_DIR}/SDK/include/NeoEngine)

## ADD_DEPENDENCIES(NeoEngine neoengine-swig)
