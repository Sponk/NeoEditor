## Find source and headers
FILE(GLOB HEADERS include/*.h)
FILE(GLOB SOURCES src/*.c*)

IF(CMAKE_HAS_SORT)
  LIST(SORT HEADERS)
  LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

## Build
INCLUDE_DIRECTORIES(
  ${NEO_CORE_INCLUDE_DIR}
  ${NEO_ENGINE_INCLUDE_DIR}
  ${SDL_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${TINYUTF8_INCLUDE_DIR}
  ${SEXPRESSO_INCLUDE_DIR}
)

# SET(CMAKE_INSTALL_RPATH "./") # "${CMAKE_INSTALL_PREFIX}")

IF(DISABLE_3D)
    ADD_DEFINITIONS(-DNEO_ENGINE_DLL -DDISABLE_3D)
ELSE()
    ADD_DEFINITIONS(-DNEO_ENGINE_DLL)
ENDIF()

SET(CMAKE_SHARED_LIBRARY_PREFIX "")
add_subdirectory(swig)

IF(NOT ANDROID AND NOT EMSCRIPTEN)
        ADD_LIBRARY(NeoEngine SHARED ${SOURCES} ${HEADERS})
ELSE()
        ADD_LIBRARY(NeoEngine STATIC ${SOURCES} ${HEADERS})
ENDIF()

if(LINUX OR APPLE)
    TARGET_LINK_LIBRARIES(NeoEngine dl ${NEO_CORE_LIBRARIES} ${SEXPRESSO_LIBRARIES})
else()
    TARGET_LINK_LIBRARIES(NeoEngine ${NEO_CORE_LIBRARIES} ${SEXPRESSO_LIBRARIES})
endif()

## Install for Editor
INSTALL(TARGETS NeoEngine DESTINATION ${NEO_INSTALL_DIR})

## Install for SDK
INSTALL(TARGETS NeoEngine DESTINATION ${NEO_INSTALL_DIR}/SDK/lib COMPONENT sdk)
INSTALL(FILES ${HEADERS} DESTINATION ${NEO_INSTALL_DIR}/SDK/include/NeoEngine COMPONENT sdk)

ADD_SUBDIRECTORY(tests)

## ADD_DEPENDENCIES(NeoEngine neoengine-swig)
