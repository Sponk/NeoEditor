## Find source and headers
FILE(GLOB_RECURSE HEADERS *.h)
FILE(GLOB_RECURSE SOURCES *.c*)

IF(CMAKE_HAS_SORT)
  LIST(SORT HEADERS)
  LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

## Build
INCLUDE_DIRECTORIES(
  ${NEO_COMMON_INCLUDE_DIR}
  ${MCORE_INCLUDE_DIR}
  ${MENGINE_INCLUDE_DIR}
  ${NEOGUI_INCLUDE_DIR}

  ## 3rdparty include directories
  ${BULLET_INCLUDE_DIR}
  ${FREETYPE_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIR}
  ${JPEG_INCLUDE_DIR}
  ${PNG_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${NPK_INCLUDE_DIR}
  ${SDL_INCLUDE_DIR}
  ${OPENAL_INCLUDE_DIR}
  ${TINYXML_INCLUDE_DIR}
  ${ZLIB_INCLUDE_DIR}
  ${RAKNET_INCLUDE_DIR}
  ${GTEST_INCLUDE_DIR}
)

ADD_EXECUTABLE(LuaTestSDK ${SOURCES} ${HEADERS})

TARGET_LINK_LIBRARIES(LuaTestSDK
  ${NEO_COMMON_LIBRARIES}
  ${MCORE_LIBRARIES}
  ${MENGINE_LIBRARIES}
  ${NEOGUI_LIBRARIES}

  ## 3rdparty libraries
  ${BULLET_LIBRARIES}
  ${FREETYPE_LIBRARIES}
  ${GLEW_LIBRARIES}
  ${JPEG_LIBRARIES}
  ${PNG_LIBRARIES}
  ${VORBIS_LIBRARIES}
  ${OGG_LIBRARIES}
  ${LUA_LIBRARIES}
  ${NPK_LIBRARIES}
  ${SDL_LIBRARIES}
  ${TINYXML_LIBRARIES}
  ${OPENAL_LIBRARIES}
  ${ZLIB_LIBRARIES}
  ${RAKNET_LIBRARIES}
  ${GTEST_LIBRARIES}

  ## System libraries
  ${OPENGL_LIBRARIES}
  ${PLATFORM_LIBRARIES}
)

add_custom_target(lua-test "${NEO_BINARY_OUTPUT}/LuaTestSDK" WORKING_DIRECTORY ${NEO_BINARY_OUTPUT})
