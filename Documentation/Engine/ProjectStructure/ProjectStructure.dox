/**

@page project_structure The Project Structure

Projects created using the project manager (@ref managing_projects) have a certain directory and file layout
you need to know before creating assets, levels and scripts. While it is recommendable to follow this structure
it is not mandatory. It is in fact very easy to do something completely different for each project. The default
directory tree exists to help the publishing program to determine the final package to distribute as well as
to organize all files your project needs.

Necessary Files
---------------
Each project has a certain set of files that need to exist for it to work. The simplest project just has
one ".nproj" file. This project basically does nothing at all.
For it to become useful it must either have access to Lua scripts or a native C++ plugin.
The publishing tool uses the "assets" directory as its source so all files required to run the game
need to be in there. The very basic project looks like this:

- "Project"
	- "Project.nproj"
	- "assets"
		- "level.llvl"

The Asset Directory
-------------------

Every project has to store its assets and scripts somewhere. The preferred place for all assets and scripts the game
needs after deployment is the "assets" directory. This is the only directory that will be put into the game package
by the publisher by default (this includes all subdirectories). The management of files inside this directory is
completely up to you. Some good folders to use might be a "meshes", "textures", "shaders", "sounds" and "scripts" directory.
Those are not required but might be handy.

Some parts of the Neo GUI system require a font to be installed in the "assets" directory, namely a "default.ttf" file.
This is the default behavior and might be overridden by a GUI theme.
*/

@startuml{getServerUploadResponse.png} "getting the server response"

	device -> server: test1
	server --> device: test2

@enduml

*/
