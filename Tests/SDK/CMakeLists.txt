## Find source and headers
FILE(GLOB_RECURSE HEADERS *.h)
FILE(GLOB_RECURSE SOURCES *.c*)

IF(CMAKE_HAS_SORT)
  LIST(SORT HEADERS)
  LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

## Build
INCLUDE_DIRECTORIES(
  ${NEO_COMMON_INCLUDE_DIR}
  ${NEO_CORE_INCLUDE_DIR}
  ${NEO_ENGINE_INCLUDE_DIR}
  ${NEO2D_INCLUDE_DIR}

  ## 3rdparty include directories
  ${BULLET_INCLUDE_DIR}
  ${FREETYPE_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIR}
  ${JPEG_INCLUDE_DIR}
  ${PNG_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${NPK_INCLUDE_DIR}
  ${SDL_INCLUDE_DIR}
  ${OPENAL_INCLUDE_DIR}
  ${TINYXML_INCLUDE_DIR}
  ${ZLIB_INCLUDE_DIR}
  ${SHINY_INCLUDE_DIR}
  ${ASSIMP_INCLUDE_DIR}
  ${GTEST_INCLUDE_DIR}

  # For testing the editor
  ${NEO_SOURCE_DIR}/Neo/NeoEditor/Backend
  )

SET(BACKEND_SRC
  ${NEO_SOURCE_DIR}/Neo/NeoEditor/Backend/EditorBackend.cpp
  ${NEO_SOURCE_DIR}/Neo/NeoEditor/PluginScript/PluginScript.cpp
  )

ADD_EXECUTABLE(TestSDK ${BACKEND_SRC}  ${SOURCES} ${HEADERS})

TARGET_LINK_LIBRARIES(TestSDK
  ${NEO_COMMON_LIBRARIES}
  ${NEO_CORE_LIBRARIES}
  ${NEO_ENGINE_LIBRARIES}
  ${NEO2D_LIBRARIES}

  ## 3rdparty libraries
  ${BULLET_LIBRARIES}
  ${FREETYPE_LIBRARIES}
  ${GLEW_LIBRARIES}
  ${JPEG_LIBRARIES}
  ${PNG_LIBRARIES}
  ${VORBIS_LIBRARIES}
  ${OGG_LIBRARIES}
  ${LUA_LIBRARIES}
  ${NPK_LIBRARIES}
  ${SDL_LIBRARIES}
  ${TINYXML_LIBRARIES}
  ${OPENAL_LIBRARIES}
  ${ZLIB_LIBRARIES}
  ${GTEST_LIBRARIES}
  ${SHINY_LIBRARIES}
  ${ASSIMP_LIBRARIES}
  
  ## System libraries
  ${OPENGLES2_LIBRARIES}
  ${OPENGL_LIBRARIES}
  ${PLATFORM_LIBRARIES}
)

INCLUDE(CopyFiles)
copy_files("*.lua" "${NEO_BINARY_OUTPUT}" "copy-sdk-test")

add_custom_target(sdk-test "${NEO_BINARY_OUTPUT}/TestSDK" WORKING_DIRECTORY ${NEO_BINARY_OUTPUT})

add_dependencies(sdk-test TestSDK)
