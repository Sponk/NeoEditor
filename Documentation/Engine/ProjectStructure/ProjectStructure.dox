/**

@page project_structure The Project Structure

Projects created using the project manager (@ref managing_projects) have a certain directory and file layout
you need to know before creating assets, levels and scripts. While it is recommendable to follow this structure
it is not mandatory. It is in fact very easy to do something completely different for each project. The default
directory tree exists to help the publishing program to determine the final package to distribute as well as
to organize all files your project needs.

@image html project-manager-tutorial-directory.png


Necessary Files
---------------
Each project has a certain set of files that need to exist for it to work. The simplest project just has
one ".mproj" file, the "NeoPlayer" executable and some ".so/.dll" files. This project basically does nothing at all.
For it to become useful it must either have access to Lua scripts or a native C++ plugin. The game loads a "Game.so/dll"
file if it is found and loads it as a plugin. The main script that is loaded is the "assets/main.lua" file in the assets
directory. This is only the default location for that script. It is possible to customize this by using command line
parameters for NeoPlayer so the script does not have to be in there.

The Asset Directory
-------------------

Every project has to store its assets and scripts somewhere. The preferred place for all assets and scripts the game
needs after deployment is the "assets" directory. This is the only directory that will be put into the game package
by the publisher by default (this includes all subdirectories). The management of files inside this directory is
completely up to you. Some good folders to use might be a "meshes", "textures", "shaders", "sounds" and "scripts" directory.
Those are not required but might be handy.

@image html default-assets-directory.png

#### Default Lua Environment
The project manager however does not create a basic project structure. It also copies over some default assets
and scripts to make it easier to jump right into game development without having to spend time to set up various scripts
manually. The directory should contain the following entries:

- "editor"			-> Contains the 3D scene editor scripts needed to create and edit levels
- "utils" 			-> Some Lua utility scripts that are used by the editor
- "default.ttf" 	-> The default font to be used by Neo2D
- "default-theme" 	-> The default UI theme used by Neo2D
- "main.lua" 		-> The entry script file
- "settings.lua" 	-> Some settings to control the environment before your game launches

@startuml{getServerUploadResponse.png} "getting the server response"

	device -> server: test1
	server --> device: test2

@enduml

*/