## Find source and headers
FILE(GLOB_RECURSE HEADERS *.h)
# TODO: Need to include *.m* files for MAC!!!
FILE(GLOB_RECURSE SOURCES *.c*)

IF(CMAKE_HAS_SORT)
  LIST(SORT HEADERS)
  LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

ADD_SUBDIRECTORY(Plugins)
ADD_SUBDIRECTORY(Translations)

IF(WIN32)
  LIST(APPEND SOURCES "icon.rc")
  SET(NEO_IMAGEHELP "imagehlp")
ENDIF(WIN32)

## Build
ADD_DEFINITIONS(-DM_PACKAGE_WRITABLE)
ADD_DEFINITIONS(-DEDITOR_VERSION_STRING=${NEO_VERSION_STRING})

INCLUDE_DIRECTORIES(
  ${NEO_COMMON_INCLUDE_DIR}
  ${NEO_CORE_INCLUDE_DIR}
  ${NEO_ENGINE_INCLUDE_DIR}
  ${NEO2D_INCLUDE_DIR}

  ## 3rdparty include directories
  ${ASSIMP_INCLUDE_DIR}
  ${BULLET_INCLUDE_DIR}
  ${FREETYPE_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIR}
  ${JPEG_INCLUDE_DIR}
  ${PNG_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${NPK_INCLUDE_DIR}
  ${SDL_INCLUDE_DIR}
  ${OPENAL_INCLUDE_DIR}
  ${TINYXML_INCLUDE_DIR}
  ${ZLIB_INCLUDE_DIR}
  ${FLTK_INCLUDE_DIR}
  ${SHINY_INCLUDE_DIR}
)

# SET(CMAKE_INSTALL_RPATH "./")
ADD_EXECUTABLE(NeoEditor ${SOURCES} ${HEADERS})

TARGET_LINK_LIBRARIES(NeoEditor
  ${NEO_COMMON_LIBRARIES}
  ${NEO_CORE_LIBRARIES}
  ${NEO_ENGINE_LIBRARIES}
  ${NEO2D_LIBRARIES}

  ## 3rdparty libraries
  ${ASSIMP_LIBRARIES}
  ${BULLET_LIBRARIES}
  ${FREETYPE_LIBRARIES}
  ${GLEW_LIBRARIES}
  ${JPEG_LIBRARIES}
  ${PNG_LIBRARIES}
  ${VORBIS_LIBRARIES}
  ${OGG_LIBRARIES}
##  ${LUA_LIBRARIES}
  ${NPK_LIBRARIES}
  ${SDL_LIBRARIES}
  ${TINYXML_LIBRARIES}
  ${OPENAL_LIBRARIES}
  ${ZLIB_LIBRARIES}
  ${FLTK_LIBRARIES}
  ${SHINY_LIBRARIES}
  ${LUA_LIBRARIES}

  ## System libraries
  ${OPENGL_LIBRARIES}
  ${PLATFORM_LIBRARIES}
  ${NEO_IMAGEHELP}
  ${WINSOCK_LIBRARIES}
  ${FLTK_DEPENDENCIES}
)

INSTALL(TARGETS NeoEditor DESTINATION ${NEO_INSTALL_DIR})

add_custom_target(neo-editor-test "${NEO_BINARY_OUTPUT}/NeoEditor" WORKING_DIRECTORY ${NEO_BINARY_OUTPUT})
add_dependencies(neo-editor-test NeoEditor)

## Update needed translations
if(UNIX)
  add_custom_target(grep-translations-editor grep -o -r "\"tr(\\\".*\\\")\"" ./MainWindow > translations.txt
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
ENDIF()
