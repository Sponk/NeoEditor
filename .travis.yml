language: cpp
sudo: false

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test

    packages:
      - cmake
      - time
      - g++-4.8
      - gcc-4.8
      - libx11-dev
      - libogg-dev
      - libxft-dev
      - libpulse-dev
      - rpm
      - debhelper
      - doxygen
      - lua5.2
      - libgtk-3-dev
      - fakeroot
      - swig
      # - wput

#before_install:
# New GCC for c++11
#- if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi

# - sudo apt-get update -qq

# install:
# - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8; fi
# - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8"; fi

# - sudo apt-get install -y libx11-dev libogg-dev libxft-dev libpulse-dev rpm debhelper mingw-w64 gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 g++-mingw-w64-i686 g++-mingw-w64-x86-64 g++-mingw-w64 binutils-mingw-w64-i686 binutils-mingw-w64-x86-64 nsis doxygen lua5.2 libgtk-3-dev

branches:
  only:
  - development

before_script: "git fetch --tags && export VERSION=$(git describe --tags --always) && echo Building version: $VERSION"

script: 

  # - mkdir ../build-windows && cd ../build-windows && export DXSDK_DIR=~/ && cmake -DCMAKE_TOOLCHAIN_FILE=../NeoEditor/CMake/Toolchains/CrossWindowsMingw.cmake ../NeoEditor && make -j2 package 

  - mkdir ../build && cd ../build && CC=gcc-4.8 CXX=g++-4.8 cmake ../NeoEditor -DNEO_VERSION_STRING="\"$VERSION\"" && make -j2 package && make sdk-test
 
  
notifications:
  irc: chat.freenode.net#neo3d
env:
  global:
  - secure: gRfErdM33brK8kCNMdWXNqRogtUIHgzRDYAbnxxr5Ux3UjEwSFHaLJKaDGd4lJimZ1HUJEr6Z//pRAuYx497msZ/zdwgzsy1zKXSOEOywA50NMLS7da7feMujZ65Cqwxzmwq6ge6woOClLQmNZo/w6jI89DSXU/JMa5N8/VcMvA=
  - secure: gjuBvU55Hnf+J/t3f4xyFlNVq51DcTQvslKQHXwvV4GQg1pZYS2dRtGCkpASja+2MnnJ5MFBUcUctQQMVRC17VQzoccLodFnKfMcOuFLeJwayp943MinUad4KsoOzLQECW06B2hzc90hfkV29TqaQcQM+s6uEOn21gPG4zrIM/k=
  
after_success:
  - curl --ftp-create-dirs -T *.deb -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/
  - curl --ftp-create-dirs -T *.tar.gz -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/
  - curl --ftp-create-dirs -T *.rpm -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/
  - curl --ftp-create-dirs -T *.sh -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/

 # - curl --ftp-create-dirs -T Documentation/LuaDoc -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/
  - find Documentation/Developer/ -exec curl --ftp-create-dirs -T {} -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/Documentation \;

 # - wput Documentation/Developer ftp://$USER@scary-squid.de:$PASSWORD@scary-squid.de/Documentation
 
 # - cd ../build-windows
  
 # - curl --ftp-create-dirs -T *.exe -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/
 # - curl --ftp-create-dirs -T *.zip -u $USER@scary-squid.de:$PASSWORD ftp://scary-squid.de/


