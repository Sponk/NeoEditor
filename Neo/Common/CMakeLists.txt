## Find source and headers
FILE(GLOB_RECURSE HEADERS *.h)
FILE(GLOB_RECURSE SOURCES *.c*)

IF(APPLE)
    FILE(GLOB_RECURSE MAC_SOURCES *.mm)
ELSE()
    SET(MAC_SOURCES "")
ENDIF()

IF(CMAKE_HAS_SORT)
  LIST(SORT HEADERS)
  LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

## Build TODO: Only when editor is built!
ADD_DEFINITIONS(-DM_PACKAGE_WRITABLE)

IF(WIN32)
    SET(WINSOCK_LIBRARIES ws2_32)
ENDIF()

## Build
INCLUDE_DIRECTORIES(
  ${NEO_COMMON_INCLUDE_DIR}
  ${NEO_CORE_INCLUDE_DIR}
  ${NEO_ENGINE_INCLUDE_DIR}

  ${ASSIMP_INCLUDE_DIR}
  ${BULLET_INCLUDE_DIR}
  ${FREETYPE_INCLUDE_DIR}
  ${GLEW_INCLUDE_DIR}
  ${JPEG_INCLUDE_DIR}
  ${PNG_INCLUDE_DIR}
  ${OGG_INCLUDE_DIR}
  ${VORBIS_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${NPK_INCLUDE_DIR}
  ${OPENAL_INCLUDE_DIR}
  ${SDL_INCLUDE_DIR}
  ${TINYXML_INCLUDE_DIR}
  ${ZLIB_INCLUDE_DIR}
)

ADD_LIBRARY(NeoCommon STATIC ${SOURCES} ${MAC_SOURCES} ${HEADERS})

# Needed for windows
TARGET_LINK_LIBRARIES(NeoCommon ${NEO_CORE_LIBRARIES} ${NEO_ENGINE_LIBRARIES} ${SDL_LIBRARIES})

INCLUDE(CopyFiles)
ADD_DEFINITIONS(-DSHADER_PATH="assets/shaders/Renderers" -DGL_DEBUG)

# Copy shaders
copy_files("Renderers/*.vert" "${NEO_BINARY_OUTPUT}/assets/shaders" "copy-vert-shaders")
copy_files("Renderers/*.frag" "${NEO_BINARY_OUTPUT}/assets/shaders" "copy-frag-shaders")
